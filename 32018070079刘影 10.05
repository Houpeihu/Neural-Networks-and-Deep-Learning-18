{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def computeCost(X, y, theta):\n",
    "    m = np.size(X[:,0])\n",
    "    J = 1/(2*m)*np.sum((np.dot(X,theta)-y)**2)\n",
    "    return J\n",
    "data = np.loadtxt('C:/Users/desktop/ex1data2.txt',delimiter=\",\",dtype=\"float\")\n",
    "m = np.size(data[:,0])\n",
    "X = data[:,0:1]\n",
    "y = data[:,1:2]\n",
    "plt.plot(X,y,\"rx\")\n",
    "plt.xlabel('Population of City in 10,000s')\n",
    "plt.ylabel('Profit in $10,000s')\n",
    "plt.show()\n",
    "one = np.ones(m)\n",
    "X = np.insert(X,0,values=one,axis=1)\n",
    "theta = np.zeros((2,1))\n",
    "iterations = 1500\n",
    "alpha = 0.01\n",
    "J_history = np.zeros((iterations,1))\n",
    "for iter in range(0,iterations):\n",
    "    theta = theta - alpha/m*np.dot(X.T,(np.dot(X,theta)-y))\n",
    "    J_history[iter] = computeCost(X,y,theta)\n",
    "    \n",
    "plt.plot(data[:,0],np.dot(X,theta),'-')\n",
    "plt.show()\n",
    "\n",
    "print(theta)\n",
    "print(J_history)\n",
    "\n",
    "\n",
    "# In[3]:\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "def computeCost(X, y, theta):\n",
    "    m = np.size(X[:,0])   \n",
    "    J = 1/(2*m)*np.sum((np.dot(X,theta)-y)**2)\n",
    "    return J\n",
    "\n",
    " \n",
    "data = np.loadtxt('C:/Users/desktop/ex1data2.txt',delimiter=\",\",dtype=\"float\")\n",
    "m = np.size(data[:,0])\n",
    "\n",
    "X = data[:,0:2]\n",
    "y = data[:,2:3]\n",
    "\n",
    "mu = np.mean(X,0)  \n",
    "sigma = np.std(X,0)\n",
    "X_norm = np.divide(np.subtract(X,mu),sigma)\n",
    "one = np.ones(m)\n",
    "X_norm = np.insert(X_norm,0,values=one,axis=1)\n",
    "\n",
    "alpha = 0.05\n",
    "iterations = 100\n",
    "theta = np.zeros((3,1)); \n",
    "J_history = np.zeros((iterations,1))  \n",
    "for i in range(0,iterations):\n",
    "    theta = theta - alpha/m*np.dot(X_norm.T,(np.dot(X_norm,theta)-y))\n",
    "    J_history[i] = computeCost(X_norm,y,theta)\n",
    "print(theta)\n",
    "x_col = np.arange(0,iterations)\n",
    "plt.plot(x_col,J_history,'-b')\n",
    "plt.xlabel('Number of iterations')\n",
    "plt.ylabel('Cost J')\n",
    "plt.show()\n",
    "print(J_history)\n",
    "\n",
    "test1 = [1,1650,3]\n",
    "test1[1:3] = np.divide(np.subtract(test1[1:3],mu),sigma)\n",
    "price = np.dot(test1,theta)\n",
    "print(price)     "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
